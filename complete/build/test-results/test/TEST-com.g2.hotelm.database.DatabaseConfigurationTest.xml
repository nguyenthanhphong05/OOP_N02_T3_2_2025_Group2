<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.g2.hotelm.database.DatabaseConfigurationTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2025-08-13T11:40:07" hostname="DESKTOP-OTQMG1O" time="0.331">
  <properties/>
  <testcase name="testDatabaseIsEmptyInitially()" classname="com.g2.hotelm.database.DatabaseConfigurationTest" time="0.306"/>
  <testcase name="testRoomTableExists()" classname="com.g2.hotelm.database.DatabaseConfigurationTest" time="0.007"/>
  <testcase name="testDatabaseConnectionIsEstablished()" classname="com.g2.hotelm.database.DatabaseConfigurationTest" time="0.003"/>
  <testcase name="testRepositoryIsInjected()" classname="com.g2.hotelm.database.DatabaseConfigurationTest" time="0.005"/>
  <testcase name="testRoomTableStructure()" classname="com.g2.hotelm.database.DatabaseConfigurationTest" time="0.007"/>
  <system-out><![CDATA[18:40:03.309 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.g2.hotelm.database.DatabaseConfigurationTest]: DatabaseConfigurationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
18:40:03.384 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.g2.hotelm.HotelManagementApplication for test class com.g2.hotelm.database.DatabaseConfigurationTest
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2025-08-13T18:40:03.698+07:00  INFO 38616 --- [    Test worker] c.g.h.d.DatabaseConfigurationTest        : Starting DatabaseConfigurationTest using Java 21.0.7 with PID 38616 (started by For Work in E:\OOPG2\complete)
2025-08-13T18:40:03.699+07:00 DEBUG 38616 --- [    Test worker] c.g.h.d.DatabaseConfigurationTest        : Running with Spring Boot v3.3.0, Spring v6.1.8
2025-08-13T18:40:03.700+07:00  INFO 38616 --- [    Test worker] c.g.h.d.DatabaseConfigurationTest        : The following 1 profile is active: "test"
2025-08-13T18:40:04.285+07:00  INFO 38616 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-13T18:40:04.329+07:00  INFO 38616 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 2 JPA repository interfaces.
2025-08-13T18:40:04.797+07:00  INFO 38616 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-13T18:40:04.863+07:00  INFO 38616 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-08-13T18:40:04.924+07:00  INFO 38616 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-13T18:40:05.166+07:00  INFO 38616 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-13T18:40:05.185+07:00  INFO 38616 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-13T18:40:05.286+07:00  INFO 38616 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-13T18:40:05.287+07:00  INFO 38616 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-13T18:40:05.302+07:00  WARN 38616 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-13T18:40:05.860+07:00  INFO 38616 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-13T18:40:05.869+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists reservations cascade 
Hibernate: 
    drop table if exists reservations cascade 
2025-08-13T18:40:05.872+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists rooms cascade 
Hibernate: 
    drop table if exists rooms cascade 
2025-08-13T18:40:05.876+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    create table reservations (
        id bigint generated by default as identity,
        customer_name varchar(255) not null,
        end_date varchar(255) not null,
        room_type varchar(255) not null,
        start_date varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table reservations (
        id bigint generated by default as identity,
        customer_name varchar(255) not null,
        end_date varchar(255) not null,
        room_type varchar(255) not null,
        start_date varchar(255) not null,
        primary key (id)
    )
2025-08-13T18:40:05.883+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    create table rooms (
        is_available boolean not null,
        price float(53) not null check (price>=0),
        room_id integer not null unique check (room_id>=1),
        id bigint generated by default as identity,
        description varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table rooms (
        is_available boolean not null,
        price float(53) not null check (price>=0),
        room_id integer not null unique check (room_id>=1),
        id bigint generated by default as identity,
        description varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
2025-08-13T18:40:05.891+07:00  INFO 38616 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-13T18:40:06.332+07:00  WARN 38616 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-13T18:40:06.674+07:00  INFO 38616 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-13T18:40:06.742+07:00  INFO 38616 --- [    Test worker] c.g.h.d.DatabaseConfigurationTest        : Started DatabaseConfigurationTest in 3.221 seconds (process running for 4.137)
=== DATABASE TEST RUNNER ===

1. Testing database connection...
2025-08-13T18:40:07.091+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
✓ Database connected. Initial room count: 0

2. Testing room save operation...
2025-08-13T18:40:07.133+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
✓ Room saved with ID: 1
  Room details: 101 - Standard - $99.99

3. Testing find all rooms...
2025-08-13T18:40:07.163+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
✓ Found 1 room(s) in database
  - Room 101: Standard ($99.99)

4. Testing multiple room saves...
2025-08-13T18:40:07.168+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:07.170+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:07.172+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
✓ Multiple rooms saved. Total count: 3

5. Testing find available rooms...
2025-08-13T18:40:07.202+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.is_available
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.is_available
✓ Found 2 available room(s)
  - Available: Room 101 (Standard)
  - Available: Room 103 (Suite)

6. Testing room update...
2025-08-13T18:40:07.206+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
2025-08-13T18:40:07.213+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:07.218+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
2025-08-13T18:40:07.222+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
✓ Room updated successfully
  - Type changed to: Updated Standard
  - Price changed to: $149.99

7. Testing room deletion...
2025-08-13T18:40:07.224+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
2025-08-13T18:40:07.227+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:07.230+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    delete 
    from
        rooms 
    where
        id=?
Hibernate: 
    delete 
    from
        rooms 
    where
        id=?
2025-08-13T18:40:07.232+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
✓ Room deleted successfully
2025-08-13T18:40:07.233+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
  - Final room count: 2

=== DATABASE TEST COMPLETED ===
All database operations have been tested.
Check the output above for any failures.
2025-08-13T18:40:07.542+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
2025-08-13T18:40:07.567+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
2025-08-13T18:40:07.568+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\For Work\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.16\4a451ee6484abac3a498df0f3b33ed00a6fced4d\byte-buddy-agent-1.14.16.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
