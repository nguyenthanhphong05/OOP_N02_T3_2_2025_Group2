<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" tests="7" skipped="0" failures="0" errors="0" timestamp="2025-08-13T11:40:08" hostname="DESKTOP-OTQMG1O" time="0.064">
  <properties/>
  <testcase name="testFindAllRooms()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.013"/>
  <testcase name="testUpdateRoom()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.008"/>
  <testcase name="testSaveAndRetrieveRoom()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.005"/>
  <testcase name="testMultipleOperationsInSequence()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.013"/>
  <testcase name="testDeleteRoom()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.007"/>
  <testcase name="testDatabasePersistenceAfterFlush()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.005"/>
  <testcase name="testFindByIsAvailableTrue()" classname="com.g2.hotelm.repository.RoomRepositoryDatabaseTest" time="0.009"/>
  <system-out><![CDATA[2025-08-13T18:40:08.004+07:00  INFO 38616 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.g2.hotelm.repository.RoomRepositoryDatabaseTest]: RoomRepositoryDatabaseTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-13T18:40:08.009+07:00  INFO 38616 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.g2.hotelm.HotelManagementApplication for test class com.g2.hotelm.repository.RoomRepositoryDatabaseTest
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2025-08-13T18:40:08.025+07:00  INFO 38616 --- [    Test worker] c.g.h.r.RoomRepositoryDatabaseTest       : Starting RoomRepositoryDatabaseTest using Java 21.0.7 with PID 38616 (started by For Work in E:\OOPG2\complete)
2025-08-13T18:40:08.025+07:00 DEBUG 38616 --- [    Test worker] c.g.h.r.RoomRepositoryDatabaseTest       : Running with Spring Boot v3.3.0, Spring v6.1.8
2025-08-13T18:40:08.025+07:00  INFO 38616 --- [    Test worker] c.g.h.r.RoomRepositoryDatabaseTest       : The following 1 profile is active: "test"
2025-08-13T18:40:08.083+07:00  INFO 38616 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-13T18:40:08.092+07:00  INFO 38616 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
2025-08-13T18:40:08.101+07:00  INFO 38616 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-08-13T18:40:08.111+07:00  INFO 38616 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:cffde695-a0f4-4071-810e-7b2dc55f7e94;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-13T18:40:08.147+07:00  INFO 38616 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-13T18:40:08.150+07:00  INFO 38616 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-13T18:40:08.158+07:00  INFO 38616 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-13T18:40:08.160+07:00  WARN 38616 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-13T18:40:08.201+07:00  INFO 38616 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-13T18:40:08.201+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists reservations cascade 
Hibernate: 
    drop table if exists reservations cascade 
2025-08-13T18:40:08.202+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists rooms cascade 
Hibernate: 
    drop table if exists rooms cascade 
2025-08-13T18:40:08.202+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    create table reservations (
        id bigint generated by default as identity,
        customer_name varchar(255) not null,
        end_date varchar(255) not null,
        room_type varchar(255) not null,
        start_date varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table reservations (
        id bigint generated by default as identity,
        customer_name varchar(255) not null,
        end_date varchar(255) not null,
        room_type varchar(255) not null,
        start_date varchar(255) not null,
        primary key (id)
    )
2025-08-13T18:40:08.204+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    create table rooms (
        is_available boolean not null,
        price float(53) not null check (price>=0),
        room_id integer not null unique check (room_id>=1),
        id bigint generated by default as identity,
        description varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table rooms (
        is_available boolean not null,
        price float(53) not null check (price>=0),
        room_id integer not null unique check (room_id>=1),
        id bigint generated by default as identity,
        description varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
2025-08-13T18:40:08.205+07:00  INFO 38616 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-13T18:40:08.232+07:00  INFO 38616 --- [    Test worker] c.g.h.r.RoomRepositoryDatabaseTest       : Started RoomRepositoryDatabaseTest in 0.22 seconds (process running for 5.627)
2025-08-13T18:40:08.238+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.241+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.241+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.243+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
2025-08-13T18:40:08.249+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.251+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:08.252+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
2025-08-13T18:40:08.253+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:08.258+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.259+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:08.263+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.265+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
2025-08-13T18:40:08.267+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
Hibernate: 
    update
        rooms 
    set
        description=?,
        is_available=?,
        price=?,
        room_id=?,
        type=? 
    where
        id=?
2025-08-13T18:40:08.269+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.270+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
2025-08-13T18:40:08.271+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    delete 
    from
        rooms 
    where
        id=?
Hibernate: 
    delete 
    from
        rooms 
    where
        id=?
2025-08-13T18:40:08.272+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
2025-08-13T18:40:08.273+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0
2025-08-13T18:40:08.276+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.278+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    delete 
    from
        rooms 
    where
        id=?
Hibernate: 
    delete 
    from
        rooms 
    where
        id=?
2025-08-13T18:40:08.279+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:08.280+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        rooms r1_0
Hibernate: 
    select
        count(*) 
    from
        rooms r1_0
2025-08-13T18:40:08.284+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.285+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.id=?
2025-08-13T18:40:08.291+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.292+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.293+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        rooms
        (description, is_available, price, room_id, type, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-08-13T18:40:08.295+07:00 DEBUG 38616 --- [    Test worker] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.is_available
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.is_available,
        r1_0.price,
        r1_0.room_id,
        r1_0.type 
    from
        rooms r1_0 
    where
        r1_0.is_available
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
