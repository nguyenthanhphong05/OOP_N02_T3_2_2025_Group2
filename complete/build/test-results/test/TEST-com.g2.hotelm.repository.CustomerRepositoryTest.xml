<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.g2.hotelm.repository.CustomerRepositoryTest" tests="7" skipped="0" failures="0" errors="0" timestamp="2025-08-14T06:02:24" hostname="DESKTOP-OTQMG1O" time="0.596">
  <properties/>
  <testcase name="testFindByIdNumberNotFound()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.337"/>
  <testcase name="testFindByIdNumber()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.179"/>
  <testcase name="testSearchCustomers()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.039"/>
  <testcase name="testFindByEmailNotFound()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.004"/>
  <testcase name="testFindByFullNameContainingIgnoreCase()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.01"/>
  <testcase name="testFindByEmail()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.006"/>
  <testcase name="testSaveCustomer()" classname="com.g2.hotelm.repository.CustomerRepositoryTest" time="0.017"/>
  <system-out><![CDATA[2025-08-14T13:02:24.484+07:00  INFO 11968 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.g2.hotelm.repository.CustomerRepositoryTest]: CustomerRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-14T13:02:24.494+07:00  INFO 11968 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.g2.hotelm.HotelManagementApplication for test class com.g2.hotelm.repository.CustomerRepositoryTest
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2025-08-14T13:02:24.510+07:00  INFO 11968 --- [    Test worker] c.g.h.repository.CustomerRepositoryTest  : Starting CustomerRepositoryTest using Java 21.0.7 with PID 11968 (started by For Work in E:\OOPG2\OOP_N02_T3_2_2025_Group2\complete)
2025-08-14T13:02:24.511+07:00  INFO 11968 --- [    Test worker] c.g.h.repository.CustomerRepositoryTest  : No active profile set, falling back to 1 default profile: "default"
2025-08-14T13:02:24.576+07:00  INFO 11968 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-14T13:02:24.585+07:00  INFO 11968 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
2025-08-14T13:02:24.595+07:00  INFO 11968 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-08-14T13:02:24.631+07:00  INFO 11968 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:d3a893a1-f475-4068-ba54-56581b7a0713;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-14T13:02:24.655+07:00  INFO 11968 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-14T13:02:24.658+07:00  INFO 11968 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-14T13:02:24.669+07:00  INFO 11968 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-14T13:02:24.671+07:00  WARN 11968 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-14T13:02:24.751+07:00  INFO 11968 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists customer cascade 
Hibernate: drop table if exists reservations cascade 
Hibernate: drop table if exists rooms cascade 
Hibernate: create table customer (id bigint generated by default as identity, email varchar(255) not null unique, full_name varchar(255) not null, id_number varchar(255), phone varchar(255), primary key (id))
Hibernate: create table reservations (check_in_date date not null, check_out_date date not null, total_price float(53) not null, customer_id bigint, id bigint generated by default as identity, room_id bigint, primary key (id))
Hibernate: create table rooms (is_available boolean not null, price float(53) not null check (price>=0), id bigint generated by default as identity, description varchar(255) not null, room_id varchar(255) not null unique, type enum ('DELUXE','DOUBLE','SINGLE','STANDARD','SUITE') not null, primary key (id))
Hibernate: alter table if exists reservations add constraint FKnobxejqb5m7lmdmlhbdejw84a foreign key (customer_id) references customer
Hibernate: alter table if exists reservations add constraint FKljt6q1tp205b0h26eiegc5mx6 foreign key (room_id) references rooms
2025-08-14T13:02:24.762+07:00  INFO 11968 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-14T13:02:24.846+07:00  INFO 11968 --- [    Test worker] c.g.h.repository.CustomerRepositoryTest  : Started CustomerRepositoryTest in 0.35 seconds (process running for 8.584)
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where c1_0.id_number=?
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where c1_0.id_number=?
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where lower(c1_0.full_name) like lower(('%'||?||'%')) escape '' or lower(c1_0.email) like lower(('%'||?||'%')) escape '' or c1_0.phone like ('%'||?||'%') escape ''
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where c1_0.email=?
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where upper(c1_0.full_name) like upper(?) escape '\'
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
Hibernate: select c1_0.id,c1_0.email,c1_0.full_name,c1_0.id_number,c1_0.phone from customer c1_0 where c1_0.email=?
Hibernate: insert into customer (email,full_name,id_number,phone,id) values (?,?,?,?,default)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
